name: '@tjsr/gh-util-actions/version-bump-publish'
description: Update an npm dependency and raise a PR
author: Tim Rowe <tim@tjsr.id.au>
inputs:
  token:
    type: string
    description: 'The GitHub token to use for PR creation'
    required: false
  patchlevel:
    type: string
    description: 'The release level to use for the new version number. [*prerelease|patch|minor|major]'
    required: false
    default: 'prerelease'
  noPublish:
    type: boolean
    description: 'Bump the version number, but don't publish the package'
    required: false
    default: false
  noTag:
    type: boolean
    description: 'Bump the version number, but don't tag the commit'
    required: false
    default: false
  npmVersion:
    type: string
    description: 'The npm version to install before running the action'
    default: 'latest'
    required: false
  nodeVersion:
    type: string
    description: 'The node version to install before running the action'
    required: false
    default: '20.15.1'

outputs:
  version:
    description: 'The new version number'
    value: ${{ steps.bump-version.outputs.version }}

runs:
  # run-name: Update ${{ inputs.dependency }} npm dependency and raise a PR
  using: 'composite'
  steps:
  - name: Validate patchlevel input
    id: validate-patchlevel
    run: |
      if [[ ! ${{ inputs.patchlevel }} =~ ^(prerelease|patch|minor|major)$ ]]; then
        echo "Invalid patchlevel value provided: ${{ inputs.patchlevel }}"
        exit 1
      fi

  # Setup .npmrc file to publish to GitHub Packages
  - uses: actions/setup-node@v4
    if: inputs.nodeVersion
    with:
      node-version: ${{ inputs.nodeVersion}}
      # cache: 'npm'
      registry-url: 'https://npm.pkg.github.com'
      # Defaults to the user or organization that owns the workflow file
      scope: "@${{ github.organization }}"

  - name: Install npm ${{ inputs.npmVersion }}
    run: npm install -g npm@${{ inputs.npmVersion }}
    shell: bash

  - name: Cache node modules
    id: cache-node_modules
    uses: actions/cache@main
    env:
      cache-name: cache-node-modules
    with:
      # npm cache files are stored in `~/.npm` on Linux/macOS
      path: ~/node_modules
      # todo - change this so we are less restrictive on package-lock changes
      key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

  - name: Install ${{ env.PROJECT }} dependencies
    id: install
    shell: bash
    run: |
      npm ci

  - name: Bump the patch version
    id: bump-version
    shell: bash
    run: |
      if [ -z "${{ inputs.noTag }}" ]; then
        NO_TAG="--no-git-tag-version"
      else
        $NO_TAG=""
      fi
      NEW_VERSION_NUMBER=$(npm version ${{ inputs.patchlevel }} $NO_TAG --preid dev)
      echo "version=$NEW_VERSION_NUMBER" >> "$GITHUB_OUTPUT"

  - name: Publish the package
    if: !inputs.noPublish
    id: publish-package
    shell: bash
    run: |
      npm publish --dry-run

