name: '@tjsr/gh-util-actions/version-bump-publish'
description: Update an npm dependency and raise a PR
author: Tim Rowe <tim@tjsr.id.au>
inputs:
  patchlevel:
    type: string
    description: 'The release level to use for the new version number. [*prerelease|patch|minor|major]'
    required: false
    default: 'prerelease'
  noPublish:
    type: boolean
    description: "Bump the version number, but don't publish the package"
    required: false
    default: false
  noTag:
    type: boolean
    description: "Bump the version number, but don't tag the commit"
    required: false
    default: false
  cacheKey:
    type: string
    description: 'The key to use for the node cache'
    required: false
    default: 'node-cache'

outputs:
  version:
    description: 'The new version number'
    value: ${{ steps.bump-version.outputs.version }}

runs:
  # run-name: Update ${{ inputs.dependency }} npm dependency and raise a PR
  using: 'composite'
  steps:
  - name: Validate patchlevel input
    id: validate-patchlevel
    shell: bash
    run: |
      if [[ ! ${{ inputs.patchlevel }} =~ ^(prerelease|patch|minor|major)$ ]]; then
        echo "Invalid patchlevel value provided: ${{ inputs.patchlevel }}"
        exit 1
      fi

  - name: Cache node config and node_modules
    uses: actions/cache@main
    with:
      path: |
        ~/.npmrc
        ~/node_modules
      key: ${{ inputs.cacheKey || format('node-cache-{0}', github.run_number)}}

  - name: Install ${{ env.PROJECT }} dependencies
    id: install
    shell: bash
    run: |
      cat ~/.npmrc
      npm ci

  - name: Bump the patch version
    id: bump-version
    shell: bash
    run: |
      if [ -z "${{ inputs.noTag }}" ]; then
        NO_TAG="--no-git-tag-version"
      else
        $NO_TAG=""
      fi
      NEW_VERSION_NUMBER=$(npm version ${{ inputs.patchlevel }} $NO_TAG --preid dev)
      echo "version=$NEW_VERSION_NUMBER" >> "$GITHUB_OUTPUT"

  - name: Publish the package
    if: ${{ inputs.noPublish != 'true' }}
    id: publish-package
    shell: bash
    run: |
      npm publish --dry-run
